@function to_css_value($value) {
  @if $value == full {
    @return 100%;
  } @else if $value == fit {
    @return fit-content;
  } @else if $value == min {
    @return min-content;
  } @else if $value == max {
    @return max-content;
  } @else if type-of($value) == "number" and str-index(#{$value}, "space") {
    $factor: str-slice(#{$value}, 1, str-index(#{$value}, "space") - 1);
    @return calc(#{$factor} * var(--space));
  } @else {
    @return $value;
  }
}

// 宽高

@mixin w($value) {
  width: to_css_value($value);
}

@mixin min_w($value) {
  min-width: to_css_value($value);
}

@mixin max_w($value) {
  max-width: to_css_value($value);
}

@mixin h($value) {
  height: to_css_value($value);
}

@mixin min_h($value) {
  min-height: to_css_value($value);
}

@mixin maxh($value) {
  max-height: to_css_value($value);
}

// 内边距
@mixin p($value) {
  padding: to_css_value($value);
}

@mixin pt($value) {
  padding-top: to_css_value($value);
}

@mixin pr($value) {
  padding-right: to_css_value($value);
}

@mixin pb($value) {
  padding-bottom: to_css_value($value);
}

@mixin pl($value) {
  padding-left: to_css_value($value);
}

@mixin px($value) {
  padding-left: to_css_value($value);
  padding-right: to_css_value($value);
}

@mixin py($value) {
  padding-top: to_css_value($value);
  padding-bottom: to_css_value($value);
}

// 外边距
@mixin m($value) {
  margin: to_css_value($value);
}

@mixin mt($value) {
  margin-top: to_css_value($value);
}

@mixin mr($value) {
  margin-right: to_css_value($value);
}

@mixin mb($value) {
  margin-bottom: to_css_value($value);
}

@mixin ml($value) {
  margin-left: to_css_value($value);
}

@mixin mx($value) {
  margin-left: to_css_value($value);
  margin-right: to_css_value($value);
}

@mixin my($value) {
  margin-top: to_css_value($value);
  margin-bottom: to_css_value($value);
}

// display
@mixin display($value) {
  display: $value;
}

// flex

@mixin flex($dir) {
  display: flex;
  @if $dir == row {
    flex-direction: row;
  } @else if $dir == col {
    flex-direction: column;
  } @else if $dir == wrap {
    flex-wrap: wrap;
  }
}

@mixin gap($value) {
  gap: to_css_value($value);
}

@mixin grow($value: 1) {
  flex-grow: to_css_value($value);
}

@mixin shrink($value: 1) {
  flex-shrink: to_css_value($value);
}

@mixin basis($value) {
  flex-basis: to_css_value($value);
}

@mixin items($value) {
  align-items: $value;
}

@mixin justify($value) {
  justify-content: $value;
}

@mixin self($value) {
  align-self: $value;
}

// 定位
// position

@mixin absolute() {
  position: absolute;
}

@mixin relative() {
  position: relative;
}

@mixin fixed() {
  position: fixed;
}

@mixin sticky() {
  position: sticky;
}

@mixin z($value) {
  z-index: $value;
}

// 距离
@mixin l($value) {
  left: to_css_value($value);
}

@mixin r($value) {
  right: to_css_value($value);
}

@mixin t($value) {
  top: to_css_value($value);
}

@mixin b($value) {
  bottom: to_css_value($value);
}

// ---- 背景 ---
@mixin bgc($color) {
  background-color: $color;
}

@mixin bg($color) {
  background: $color;
}

// ---- 文本 ----
@mixin color($color) {
  color: $color;
}

// 文本对齐
@mixin text($value) {
  text-align: $value;
}

// 文本对齐
@mixin size($value) {
  font-size: $value;
}

// 透明度
@mixin opacity($value) {
  opacity: $value;
}

// 过渡
@mixin transition($properties, $duration: 0.08s, $timing: ease) {
  transition: $properties $duration $timing;
}

@mixin rotate($value) {
  transform: rotate($value);
}

// ---- 圆角 ----
@mixin radius($value) {
  border-radius: to_css_value($value);
}

// ---- 光标 ----
@mixin cursor($value) {
  cursor: $value;
}

// ---- 特定工具 ----
@mixin line_label {
  font-size: 14px;
  height: 16px;
  user-select: none;
  color: var(--label-color);
}

@mixin as_block {
  @include p(0.25space);
  @include w(fit);
  border: 1px solid var(--cond-block-border-color);
}
